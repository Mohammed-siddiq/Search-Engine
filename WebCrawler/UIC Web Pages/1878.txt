<html><head>


<link rel="stylesheet" type="text/css" href="index_files/style.css">
<title>Matlab</title>
<style>
<!--
span.SpellE
	{}
-->
</style>
</head><body>

<div id="container">
<div id="top">
  <a href="index.htm">Home</a><br>
</div>
<div id="leftnav" style="width: 172px; height: 268px">
<!-- Start of Google Analytics Code -->
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
try {
var pageTracker = _gat._getTracker("UA-9908142-1");
pageTracker._trackPageview();
} catch(err) {}</script>
<!-- End of Google Analytics Code -->
<p>
<a href="papers.htm">Papers</a><br>
  <a href="code.htm">Code</a><br>
  <a href="research.htm">Research</a><br>
  <a href="courses.htm">Courses</a><br>
  <br>
  <a href="pubDoc/cv_200609.pdf">CV (pdf)</a><br>
  <a href="links.html">Links</a><br>
</p>
</div>


<div id="content">


<p class=MsoNormal align=center style='text-align:center'><span lang="en-us">
<font size="5" face="Times New Roman"><b>Using Matlab C/C++ Math Library without Matlab or 
ITS Compiler</b></font></span></p>

<p class=MsoNormal>&nbsp;</p>
<p class=MsoNormal><b><span lang=EN-US>
<o:p><font size="4" face="Times New Roman">Objective of this note</font></o:p></span></b></p>
<p class=MsoNormal style="margin-top: 30px"><span lang="en-us">
<font face="Times New Roman">In this note, we will see 
how to make use of the Matlab C Math 
Library and C++ Math Library (see manuals and references below) 
provided by Matlab, and have it serve our TAO and PETSc optimization programs.&nbsp; 
We will link them together rather than simply using the filesystem for 
communication.&nbsp; Matrix inversion and matrix-matrix multiplication are taken 
as examples of the math library (other examples are eigenvalue, SVD, .&nbsp; We restrict ourselves to math library, 
though I think it will be easy to extend to other libraries such as MATLAB C/C++ 
Graphics Library.&nbsp; <font color="#FF0000">This note is NOT about how to 
convert an <i>arbitrary</i> Matlab .m file to C++, without using the expensive 
Matlab Compiler.</font></font></span></p>
<p class=MsoNormal><span lang="en-us"><font face="Times New Roman">First, compare the price.&nbsp; 
As of 3 pm on August 6, 2007 (Sydney time GMT +10:00), a naked Matlab 7.4 
without any toolbox costs USD 2,400 for individual license (maybe they will give 
you some not very useful toolboxes for free to promote).&nbsp; The Matlab 
Compiler 4.6, which converts Matlab .m code to C, costs USD 6,250.</font></span></p>
<p class=MsoNormal><font face="Times New Roman"><span lang="en-us">This page 
also gives details about how to compile the <font color="#0000FF">
<a style="color: blue; text-underline: single" href="pubDoc/IT/nips06_code.zip">code</a> </font>for my paper</span></font></p>

<table border="0" width="79%" cellspacing="1">
	<tr>
		<td width="27">&nbsp;</td>
		<td width="27">&nbsp;<p>&nbsp;</td>
		<td>
		<p style="margin-top: 0; margin-bottom: 0"><font face="Times New Roman">Xinhua Zhang and
		<a href="http://www.comp.nus.edu.sg/~leews/">Wee Sun Lee</a></font></p>
		<p style="margin-top: 0; margin-bottom: 0"><font face="Times New Roman"><i>Hyperparameter Learning 
		for Graph based Semi-supervised Learning Algorithms</i></font></p>
		<p style="margin-top: 0; margin-bottom: 0"><font face="Times New Roman">Advances in Neural 
		Information Processing Systems 19, 2009. [<a href="http://www.stat.purdue.edu/~zhang305/papers/ZhaLee06.pdf">PDF</a>]</font></td>
	</tr>
</table>
<p class=MsoNormal><span lang="en-us"><font face="Times New Roman">After compilation, run &quot;./loo&quot;.&nbsp; 
Well, now you can only see that it complains about missing arg -sig.&nbsp; When 
I have time, I will try to provide a more succinct example.&nbsp; Now just take 
it as an indication that our compilation and linking are both well done.</font></span></p>
<p class=MsoNormal><span lang="en-us"><font face="Times New Roman">The versions of packages or 
tools used in this note are: </font></span></p>
<p class=MsoNormal><span lang="en-us"><font face="Times New Roman">PETSc 2.3.0, TAO 1.8.&nbsp; We will not use MPI.</font></span></p>
<p class=MsoNormal><span lang="en-us"><font face="Times New Roman">gcc version 3.3.5 (if on 
Debian 1:3.3.5-12) and gcc version 4.0.3 (if on Ubuntu 4.0.3-1ubuntu5)&nbsp;&nbsp;&nbsp;
</font></span></p>
<p class=MsoNormal><span lang="en-us"><font face="Times New Roman">See 
<a href="#version" style="color: blue; text-underline: single">
version considerations</a> and 
<a href="#license" style="color: blue; text-underline: single">license considerations</a> in 
special notes.&nbsp; </font></span></p>
<p class=MsoNormal><span lang="en-us"><font face="Times New Roman">The version of Matlab we 
will make use of is 6.5, which is installed on RSISE Debian machine, but not on Ubuntu machines (where only Matlab 7.2 is installed).&nbsp; Only the Matlab 6.5 
on Debian has a Compiler installed, but the administrator reserved all the 
licenses so we can't use it.&nbsp; </font></span></p>
<p class=MsoNormal><span lang="en-us"><font face="Times New Roman">But the approach below 
doesn't require the availability of Matlab on your own machine (as long as you 
can get some header files and libraries, see below).&nbsp; It works 
on both Debian and Ubuntu.&nbsp; So far, I haven't tested on WinXP.&nbsp; Refer 
to <a href="#license" style="color: blue; text-underline: single">license considerations</a> in special notes.</font></span></p>
<p class=MsoNormal>&nbsp;</p>
<p class=MsoNormal><b><span lang="en-us"><font size="4" face="Times New Roman">Steps</font></span></b></p>
<p class=MsoNormal style="margin-top: 30px"><span lang="en-us">
<font face="Times New Roman">We will assume that 
all related files will be placed in the directory /home/usr/test.&nbsp; In the end, we 
will create three subfolders in /home/usr/test: include, bin, and toolbox.&nbsp; 
For more information about how to install PETSc and TAO on cygwin (or Linux 
machines), please read another 
<a href="../pubDoc/IT/TAO%20Installation%20on%20Cygwin.htm" style="color: blue; text-underline: single">
note</a> of mine.</font></span></p>
<p class=MsoNormal><span lang="en-us"><font face="Times New Roman"><b>1.</b>&nbsp; Download the
<a style="color: blue; text-underline: single" href="pubDoc/IT/include.zip">include.zip</a> (179 KB, dead link now since I don't want to put myself in hot 
water) which contains necessary Matlab header files.&nbsp; Decompress it and put 
the folder &quot;include&quot; under /home/usr/test.&nbsp; If you have the Compiler 
toolbox installed, then the include.zip above is the folder /usr/local/matlab6.5/extern/include</font></span></p>
<p class=MsoNormal><span lang="en-us"><font face="Times New Roman"><b>2.</b>&nbsp; Download the
<a style="color: blue; text-underline: single" href="pubDoc/IT/mglinstaller">mglinstaller</a> (free installer, 13 MB) provided by Matlab 
Compiler 
which installs the runtime library.&nbsp; Save it to /home/usr/test.&nbsp; Run 
&quot;./mglinstaller&quot; and it will install the Matlab runtime libraries under /home/usr/test/bin/glnx86.&nbsp; 
It will also generate a folder /home/usr/test/toolbox, which we will not use (at 
least not as explicitly as to my knowledge).</font></span></p>
<p class=MsoNormal><span lang="en-us"><font face="Times New Roman"><b>3.</b>&nbsp; Download the
<a style="color: blue; text-underline: single" href="pubDoc/IT/ccpp_math_example.zip">ccpp_math_example.zip</a> which contains the 
examples coming with Matlab.&nbsp; It has two folders, one for C and one for 
C++.&nbsp; Notice that they use different makefiles, because for C++ Math 
Library, we can only use g++ 2.95, no higher version!&nbsp; Decompress 
it and put the two folders in /home/usr/test.</font></span></p>
<p class=MsoNormal><span lang="en-us"><font face="Times New Roman"><b>4.</b>&nbsp; In makefile, 
change MATLAB_ROOT to /home/usr/test, and run &quot;make&quot;.&nbsp; 
It will create an executables.</font></span></p>
<p class=MsoNormal>&nbsp;</p>
<p class=MsoNormal><b><span lang="en-us"><font size="4" face="Times New Roman">General annotation of 
our approach</font></span></b></p>
<p class=MsoNormal style="margin-top: 30px"><span lang="en-us">
<font face="Times New Roman"><b>1.</b>&nbsp; <b>Source 
code.</b>&nbsp; If you are interested to see how we called Matlab math library 
functions, pay attention to the function <i>testAccuracyImport </i>in loo.cpp.&nbsp; 
Basically, we called <i>mlfInv</i>, <i>mlfAssign</i>, <i>mxGetPr</i>, <i>
mxDestroyArray</i>.&nbsp; We also used <i>mlfEig </i>and <i>mlfSort</i> (line 
720, 721 in funciton <i>dispEigs</i>), <i>mlfMpower</i> (line 784 in funciton <i>
calPowerPtilde</i>).&nbsp; Just mimic and refer to the 
<a href="#ref" style="color: blue; text-underline: single">references</a> 
below.</font></span></p>
<p class=MsoNormal><span lang="en-us"><font face="Times New Roman"><b>2.</b>&nbsp; <b>makefile</b>.&nbsp; 
Notice that we included some library files in LIBS.&nbsp; They are based on 
trial and error, i.e., basically how the linker complains.&nbsp; Some 
header/include and lib file directory information for TAO and PETSc was also 
manually given.&nbsp; Note that the Matlab library directory $MATLAB_LIB_DIR is 
pointed to the libraries installed by the mglinstaller in step 2.&nbsp; So is 
the include directory $MATLAB_INCL_DIR.</font></span></p>
<p class=MsoNormal><span lang="en-us"><font face="Times New Roman"><b>3.</b>&nbsp; <b>
Libraries</b>.&nbsp; It may be preferable to dynamically load Matlab C/C++ Math 
Library.&nbsp; So during linking, use rpath-link when you link.&nbsp; Then you 
need to add runtime library path: &quot;export LD_LIBRARY_PATH=/home/usr/test/bin/glnx86:/usr/lib/:${LD_LIBRARY_PATH}&quot;.&nbsp; </font></span></p>
<p class=MsoNormal>&nbsp;</p>
<p class=MsoNormal><b><span lang="en-us"><font size="4" face="Times New Roman">Special notes</font></span></b></p>
<p class=MsoNormal style="margin-top: 30px"><span lang="en-us">
<font face="Times New Roman"><b>1.</b>&nbsp; It is nothing new 
to call mlfXXX, mxXXX and mexXXX functions in the MEX files written in C++.&nbsp; But 
the MEX file requires that the final program be run in Matlab.&nbsp; In other 
words, it is used to call C/C++ programs from Matlab code.&nbsp; Now we completely 
eliminate the need of the expensive Matlab, both at compilation and at runtime.</font></span></p>
<p class=MsoNormal><span lang="en-us"><font face="Times New Roman"><b>2.</b>&nbsp; <b>
<a name="version"></a>Version considerations</b>: The approach described in this 
note applies to Matlab 6.5 (maybe below as well).&nbsp; From Matlab 7 (R14), the 
C/C++ Math Library has been removed.&nbsp; In Matlab 7 and above, if you use the 
Compiler toolbox, an AES encrypted CTF file will be created after compiling .m code to C++ code.&nbsp; 
This CTF file is required at run time.&nbsp; So far, I am not able to hand craft this encrypted CTF file 
(or the decrypted version at run time).</font></span></p>
<p class=MsoNormal><span lang="en-us"><font face="Times New Roman">On Matlab R12 (6.0) and 
below, there is a separate C/C++ Math Library, which can be chosen to install or 
not when the Matlab is installed.&nbsp; This library comes free with Matlab.&nbsp; 
The library version is 2.1 in R12.&nbsp; However in R13, this library was no 
longer provided separately, and it became a component of the expensive Compiler 
toolbox.</font></span></p>
<p class=MsoNormal><span lang="en-us"><font face="Times New Roman"><b>3.</b>&nbsp; <b>
<a name="license"></a>License considerations</b>: If you don't have Matlab R12 
or below, or you don't have the Compiler toolbox though you have Matlab R13, you 
may need to take some trouble to get the header files and mglinstaller (runtime 
libraries).&nbsp; So theoretically they are not free.&nbsp; But for compilation 
using gcc as in step 5, you do not need to acquire the Matlab license.&nbsp; So 
you have two choices: </font></span></p>
<p class=MsoNormal style="margin-top: 0.1in"><span lang="en-us">
<font face="Times New Roman">&nbsp;&nbsp;&nbsp; 
i) Illegally ask your rich friend, who has Matlab (&lt;R13) or Compiler for R13, to 
give you the header files (as I said above, /usr/local/matlab6.5/extern/include) 
and the mglinstaller (/usr/local/matlab6.5/extern/include); </font></span></p>
<p class=MsoNormal style="margin-top: 0.1in"><span lang="en-us">
<font face="Times New Roman">&nbsp;&nbsp;&nbsp; 
ii) Buy ONE license only, so that you obtain the header files and library.&nbsp; 
Then all your team members can legally use the approach described here, because 
compilation doesn't require a license.</font></span></p>
<p class=MsoNormal>&nbsp;</p>
<p class=MsoNormal><b><span lang="en-us"><font size="6" face="Times New Roman"><a name="ref"></a></font>
<font size="4" face="Times New Roman">C/C++ 
Math Library Manuals and References</font></span></b></p>
<p class=MsoNormal><span lang="en-us"><font face="Times New Roman">These documents can be used 
in Matlab R12 (6.0) or R13 (6.5):</font></span></p>
<p class=MsoNormal style="margin-top: 0.1in"><span lang="en-us">
<font face="Times New Roman">*
<a style="color: blue; text-underline: single" href="pubDoc/IT/cmath_ug2b.pdf">MATLAB C Math Library 2.1 User's Guide</a></font></span></p>
<p class=MsoNormal style="margin-top: 0.1in"><span lang="en-us">
<font face="Times New Roman">*
<a style="color: blue; text-underline: single" href="pubDoc/IT/cmath_ref2b.pdf">MATLAB C Math Library 2.1 Reference</a></font></span></p>
<p class=MsoNormal style="margin-top: 0.1in"><span lang="en-us">
<font face="Times New Roman">*
<a style="color: blue; text-underline: single" href="pubDoc/IT/cppmath_ug2b.pdf">MATLAB C++ Math Library 2.1 User's Guide</a></font></span></p>
<p class=MsoNormal style="margin-top: 0.1in"><span lang="en-us">
<font face="Times New Roman">*
<a style="color: blue; text-underline: single" href="pubDoc/IT/cppmath_ref2b.pdf">MATLAB C++ Math Library 2.1 Reference</a>
</font></span></p>
<p class=MsoNormal><font face="Times New Roman">Another 
<a style="color: blue; text-underline: single" href="pubDoc/IT/HowToCompile.pdf">tutorial</a> 
that I found useful.</font></p>
</div>
<div id="footer">
Last modified Sunday, 21-June-2009 04:13:38 EST, based on the design by Prof
<a href="http://alex.smola.org">Alex Smola</a>.</div>
</div>

</body></html>